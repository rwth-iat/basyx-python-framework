name: ci

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.6", "3.8", "3.10"]
    env:
      COUCHDB_ADMIN_PASSWORD: "yo0Quai3"
    services:
      couchdb:
        image: couchdb:2.3
        ports:
          - 5984:5984
        env:
          COUCHDB_USER: "admin"
          COUCHDB_PASSWORD: ${{ env.COUCHDB_ADMIN_PASSWORD }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install coverage
        pip install -r requirements.txt
    - name: Setup test config and CouchDB database server
      run: |
        python test/_helper/setup_testdb.py -u "admin" -p "$COUCHDB_ADMIN_PASSWORD"
    - name: Test with coverage + unittest
      # Add source directory to PYTHONPATH to allow testing our CLI scripts, which import our modules
      run: |
        export PYTHONPATH=".:$PYTHONPATH"
        coverage run --source=basyx -m unittest
    - name: Report test coverage
      if: ${{ always() }}
      run: |
        coverage report -m

  static-analysis:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pycodestyle mypy
        pip install -r requirements.txt
    - name: Check typing with MyPy
      run: |
        mypy basyx test
    - name: Check code style with PyCodestyle
      run: |
        pycodestyle --count --max-line-length 120 basyx test

  package:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install setuptools wheel
    - name: Create source and wheel dist
      run: |
        python setup.py sdist bdist_wheel
